// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
let Verifier = artifacts.require('Verifier');

async function setup(accounts) {
    this.contract = await Verifier.new({
        from: accounts[0]
    });
}

contract('Verifier Tests', async (accounts) => {
    beforeEach(async function () {
        await setup(accounts);
    });

    // Test verification with correct proof
    // - use the contents from proof.json generated from zokrates steps
    it('Test verification with correct proof', async function () {
        let { proof, inputs } = require('./data/proof1.json');
        let result;
        try {
            result = await contract.verifyTx.call(proof, inputs);
        } catch (e) {
            console.log(e);
        }
        assert.equal(result, true, "Proof not valid");
    });

    // Test verification with incorrect proof
    it('Test verification with incorrect proof', async function () {
        let { proof, inputs } = require('./data/proof-invalid.json');
        let result;
        try {
            result = await contract.verifyTx.call(proof, inputs);
        } catch (e) {
            console.log(e);
        }
        assert.equal(result, false, "Proof not valid");
    });
});




